#!/bin/sh

# shellcheck source=testlib.sh
. ./testlib.sh

echo "[STEP] Skip this test if we aren't root or if 'ip netns' does not exist"

test "$(id -u)" = "0" || exit $EXIT_SKIP_TEST
test -e /dev/net/tun || exit $EXIT_SKIP_TEST
ip netns list || exit $EXIT_SKIP_TEST

ip_foo=192.168.1.1
ip_bar=192.168.1.2
mask=24

echo [STEP] Create network namespaces

ip netns add ping.test1
ip netns add ping.test2

cleanup_hook() {
  ip netns del ping.test1
  ip netns del ping.test2
}

echo [STEP] Initialize two nodes

tinc foo <<EOF
init foo
set Subnet $ip_foo
set Interface ping.test1
set Port 30090
set Address localhost
set AutoConnect no
EOF

# shellcheck disable=SC2016
create_script foo tinc-up "
  ip link set dev \$INTERFACE netns ping.test1
  ip netns exec ping.test1 ip addr add $ip_foo/$mask dev \$INTERFACE
  ip netns exec ping.test1 ip link set \$INTERFACE up
"

tinc bar <<EOF
init bar
set Subnet $ip_bar
set Interface ping.test2
set Port 30091
set AutoConnect no
EOF

# shellcheck disable=SC2016
create_script bar tinc-up "
  ip link set dev \$INTERFACE netns ping.test2
  ip netns exec ping.test2 ip addr add $ip_bar/$mask dev \$INTERFACE
  ip netns exec ping.test2 ip link set \$INTERFACE up
"

echo [STEP] Exchange configuration files

tinc foo export | tinc bar exchange | tinc foo import

echo [STEP] Start tinc

start_tinc foo
start_tinc bar

wait_script foo tinc-up
wait_script bar tinc-up

echo [STEP] The nodes should not be able to ping each other if there is no connection

must_fail ip netns exec ping.test1 ping -W1 -c3 $ip_bar

echo [STEP] After connecting they should be

create_script bar hosts/foo-up

tinc bar add ConnectTo foo
wait_script bar hosts/foo-up

ip netns exec ping.test1 ping -W1 -c3 $ip_bar
