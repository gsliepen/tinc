#!/bin/sh

. ./testlib.sh

echo [STEP] Initialize one node

tinc foo <<EOF
init foo
set DeviceType dummy
set Address localhost
set Port 30030
EOF

create_script foo tinc-up
start_tinc foo
wait_script foo tinc-up

echo [STEP] Generate an invitation and let another node join the VPN

# shellcheck disable=SC2016
create_script foo invitation-created '
cat >"$INVITATION_FILE" <<INVITE
Name = $NODE
Ifconfig = 93.184.216.34/24
Route = 2606:2800:220:1::/64 2606:2800:220:1:248:1893:25c8:1946
Route = 1.2.3.4 1234::

$(tinc foo export)
INVITE
'

tinc foo invite bar | tail -1 | tinc bar --batch join

echo [STEP] Test equivalence of host config files

diff -w "$DIR_FOO/hosts/foo" "$DIR_BAR/hosts/foo"
test "$(grep ^Ed25519PublicKey "$DIR_FOO/hosts/bar")" = "$(grep ^Ed25519PublicKey "$DIR_BAR/hosts/bar")"

echo [STEP] Check if the tinc-up.invitation file is created and contains the right commands

bar_tinc_up="$DIR_BAR/tinc-up.invitation"
test -f "$bar_tinc_up"

grep -F -q "93.184.216.34/24" "$bar_tinc_up"
grep -F -q "2606:2800:220:1::/64" "$bar_tinc_up"
grep -F -q "2606:2800:220:1:248:1893:25c8:1946" "$bar_tinc_up"
must_fail grep -F -q "1234::" "$bar_tinc_up"

echo [STEP] Check that no tinc-up is created and that tinc-up.invitation is not executable

must_fail test -x "$bar_tinc_up"
must_fail test -f "$DIR_BAR/tinc-up"
